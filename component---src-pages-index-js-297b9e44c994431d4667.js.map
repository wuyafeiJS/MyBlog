{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","render","siteTitle","get","this","siteDescription","posts","location","props","title","htmlAttributes","lang","meta","name","content","map","node","fields","slug","key","style","marginBottom","rhythm","boxShadow","to","frontmatter","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","spoiler","React","Component","pageQuery"],"mappings":"+QAUMA,E,gLACJC,OAAA,WACE,IAAMC,EAAYC,IAAIC,KAAM,sCACtBC,EAAkBF,IACtBC,KACA,4CAEIE,EAAQH,IAAIC,KAAM,sCAExB,OACE,kBAAC,IAAD,CAAQG,SAAUH,KAAKI,MAAMD,SAAUE,MAAOP,GAC5C,kBAAC,IAAD,CACEQ,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAAST,IACvCI,MAAOP,IAET,kBAAC,IAAD,MACCI,EAAMS,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNP,EAAQN,IAAIa,EAAM,sBAAwBA,EAAKC,OAAOC,KAC5D,OACE,yBAAKC,IAAKH,EAAKC,OAAOC,MACpB,wBACEE,MAAO,CACLC,aAAcC,YAAO,OAGvB,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAW,QAAUC,GAAIR,EAAKC,OAAOC,MACjDT,IAGL,+BACGO,EAAKS,YAAYC,KADpB,MAESC,YAAkBX,EAAKY,aAEhC,uBACEC,wBAAyB,CAAEC,OAAQd,EAAKS,YAAYM,iB,GAnC5CC,IAAMC,WA6CfjC,YAER,IAAMkC,EAAS","file":"component---src-pages-index-js-297b9e44c994431d4667.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport { formatReadingTime } from '../utils/helpers'\nimport { rhythm } from '../utils/typography'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const siteDescription = get(\n      this,\n      'props.data.site.siteMetadata.description'\n    )\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={siteTitle}\n        />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>\n                {node.frontmatter.date}\n                {` â€¢ ${formatReadingTime(node.timeToRead)}`}\n              </small>\n              <p\n                dangerouslySetInnerHTML={{ __html: node.frontmatter.spoiler }}\n              />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}